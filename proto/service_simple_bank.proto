syntax = "proto3";
package pb;

import "rpc_create_user.proto";
import "rpc_get_user.proto";
import "rpc_list_users.proto";
import "rpc_login_user.proto";
import "rpc_delete_user.proto";
import "rpc_update_user.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "backend-masterclass/rpc";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Simple Bank API"
    version: "1.1"
    contact: {
      name: "Ken Cat"
      url: "https://github.com/CCathlete/backend_masterclass"
      email: "mymail@example.com"
    }
  }
};

service SimpleBank {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse){
    option (google.api.http) = {
      post: "/v1/users"
      body: "*" // All parameters of the request are passed to the body.
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this endpoint to create a new user."
      summary: "Create a new user"
    };
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse){
    option (google.api.http) = {
      get: "/v1/users/{username}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this endpoint to get user's details."
      summary: "Get user info"
    };
  }
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse){
    option (google.api.http) = {
      get: "/v1/users"
    };
    
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this endpoint to list all users."
      summary: "List existing users"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse){
    option (google.api.http) = {
      patch: "/v1/users/{username}"
      body: "*"
    };
    
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this endpoint to update user's details."
      summary: "Update an existing user"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse){
    option (google.api.http) = {
      delete: "/v1/users/{username}"
    };
  }
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse){
    option (google.api.http) = {
      post: "/v1/users/login"
      body: "*"
    };
  }
}